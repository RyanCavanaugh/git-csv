# import issue-timeline-item.gql
# import issue-info.gql

query issues($owner: String!, $repoName: String!, $itemsPerPage: Int, $cursor: String = null, $states: [IssueState!] = OPEN) {
  repository(owner: $owner, name: $repoName) {
    issues(first: $itemsPerPage, states: $states, orderBy: {field: CREATED_AT, direction: ASC}, after: $cursor) {
      pageInfo {
        hasNextPage
        endCursor
      }
      nodes {
        id
        number
        createdAt
        title
        url
        author { login }
        body
        closed
        locked
        milestone { id, title }
        assignees(first: 10) {
          nodes {
            login
          }
        }
      
        thumbsUps: reactions(content: THUMBS_UP) { totalCount }
        thumbsDowns: reactions(content: THUMBS_DOWN) { totalCount }
      
        labels(first: 15) {
          nodes {
            id, name, color
          }
        }
        timelineItems(first: 100, itemTypes: [ISSUE_COMMENT, ASSIGNED_EVENT, CLOSED_EVENT, REOPENED_EVENT, LABELED_EVENT, UNLABELED_EVENT, LOCKED_EVENT, UNLOCKED_EVENT, MILESTONED_EVENT, DEMILESTONED_EVENT]) {
          pageInfo { endCursor, hasNextPage }
            nodes {
              ...issueTimelineItem
            }
        }
      }
    }
  }
  rateLimit {
    cost
    limit
    remaining
    resetAt
  }
}
