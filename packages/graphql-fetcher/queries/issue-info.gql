# import issue-timeline-item.gql

fragment issueInfo on Issue {
    id
    number
    createdAt
    updatedAt
    title
    url
    author { login }
    body
    bodyHTML
    reactionGroups {
        content
        reactors {
            totalCount
        }
    }
    closed
    state
    stateReason
    locked
    activeLockReason
    milestone { id, title }
    assignees(first: 10) {
        nodes {
            login
        }
    }

    closedByPullRequestsReferences(first:100, includeClosedPrs: true) {
        nodes {
            number
            updatedAt
            merged
            mergedAt
        }
    }

    labels(first: 15) {
        nodes {
            id, name, color
        }
    }
    timelineItems(first: 100, itemTypes: [ISSUE_COMMENT, ASSIGNED_EVENT, CLOSED_EVENT, REOPENED_EVENT, LABELED_EVENT, UNLABELED_EVENT, LOCKED_EVENT, UNLOCKED_EVENT, MILESTONED_EVENT, DEMILESTONED_EVENT]) {
        pageInfo { endCursor, hasNextPage }
        nodes {
            ...issueTimelineItem
        }
    }
}