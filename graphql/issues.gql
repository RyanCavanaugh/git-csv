query GetRepoIssues($issuesPerPage: Int, $cursor: String = null){
  ...repoIssues
}

fragment repoIssues on Query {
  repository(owner: "Microsoft", name: "TypeScript") {
    issues(first: $issuesPerPage, orderBy: {field: CREATED_AT, direction: ASC}, after: null) {
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        node {
          ...issueSummary
        }
      }
    }
  }
}

fragment issueSummary on Issue {
  id
  number
  title
  url
  author { login }
  body
  closed
  locked
  milestone { id, title }

  thumbsUps: reactions(content: THUMBS_UP) { totalCount }
  thumbsDowns: reactions(content: THUMBS_DOWN) { totalCount }

  labels(first: 100) {
    edges {
      node { id, name, color }
    }
  }
  timelineItems(first: 100) {
    pageInfo { endCursor, hasNextPage }
    edges {
      node {
        ...timelineItem
      }
    }
  }
}

fragment timelineItem on IssueTimelineItem {
  __typename
  ... on IssueComment {
    id
    author { login }
    body
    createdAt
    thumbsUps: reactions(content: THUMBS_UP) { totalCount }
    thumbsDowns: reactions(content: THUMBS_DOWN) { totalCount }
  }
  ... on AssignedEvent {
    createdAt
    actor { login }
    user { login }
  }
  ... on LabeledEvent {
    createdAt
    actor { login }
    label { id, name, color }
  }
  ... on UnlabeledEvent {
    createdAt
    actor { login }
    label { id, name, color }
  }
  ... on ClosedEvent  {
    createdAt
    actor { login }
  }
  ... on ReopenedEvent  {
    createdAt
    actor { login }
  }
  ... on MilestonedEvent {
    createdAt
    actor { login }
    milestoneTitle
  }
  ... on DemilestonedEvent {
    createdAt
    actor { login }
    milestoneTitle
  }
  ... on LockedEvent {
    createdAt
    actor { login }
    lockReason
  }
}
