#import issue-timeline-item.gql

query($owner: String!, $repoName: String!, $issuesPerPage: Int, $cursor: String = null, $states: IssueState = OPEN) {
  ...repoIssues
}

fragment repoIssues on Query {
  repository(owner: $owner, name: $repoName) {
    issues(first: $issuesPerPage, states: $states, orderBy: {field: CREATED_AT, direction: ASC}, after: $cursor) {
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        node {
          ...issueSummary
        }
      }
    }
  }
}

fragment issueSummary on Issue {
  id
  number
  createdAt
  title
  url
  author { login }
  body
  closed
  locked
  milestone { id, title }
  assignees(first: 10) {
    edges {
      node { login }
    }
  }

  thumbsUps: reactions(content: THUMBS_UP) { totalCount }
  thumbsDowns: reactions(content: THUMBS_DOWN) { totalCount }

  labels(first: 15) {
    edges {
      node { id, name, color }
    }
  }
  timelineItems(first: 50, itemTypes: [ISSUE_COMMENT, ASSIGNED_EVENT, CLOSED_EVENT, REOPENED_EVENT, LABELED_EVENT, UNLABELED_EVENT, LOCKED_EVENT, UNLOCKED_EVENT, MILESTONED_EVENT, DEMILESTONED_EVENT]) {
    pageInfo { endCursor, hasNextPage }
    edges {
      node {
        ...timelineItem
      }
    }
  }
}
